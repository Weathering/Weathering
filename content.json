{"meta":{"title":"等风起","subtitle":"等风起","description":null,"author":"shouchen","url":"https://shouchen123.github.io"},"pages":[{"title":"帮助中心","date":"2018-06-06T05:23:07.000Z","updated":"2018-06-07T02:08:03.978Z","comments":true,"path":"help/index.html","permalink":"https://shouchen123.github.io/help/index.html","excerpt":"","text":"博客主题来自：https://github.com/tangkunyin/hexo-theme-jsimple如有用请询问：https://shuoit.net/help/"},{"title":"关于我们","date":"2018-06-06T05:23:07.000Z","updated":"2018-06-07T00:54:41.579Z","comments":false,"path":"about/index.html","permalink":"https://shouchen123.github.io/about/index.html","excerpt":"","text":"嘿你好，这里是关于我们，关于这个博客！这也是我写的第一篇博客。我记得16年的时候有个同事和我说作为程序员需要一个博客，不管是学习交流还是装逼泡妹都很舒服，但是那个时候想写博客就得买虚拟主机，就要买域名觉得很浪费钱所以一直搁置有时候也会想想。后来我一个老表告诉我用GitPage+Hexo可搭建帅气好看的博客。我想搭博客的想法又起来，但是我比较懒所以2017年搭建了一个博客但是一直套着别人的主题，连一篇都没有更新。全部的链接指向也是别人的。直到今天才努力把博客搭建起来，虽然搭建的时候遇到了很多问题但是我通过百度谷歌都解决了。关于就到这里了谢谢大家。希望大家也快把自己的博客搭起来。"},{"title":"标签云","date":"2018-06-06T05:23:07.000Z","updated":"2018-06-07T02:08:48.192Z","comments":true,"path":"tags/index.html","permalink":"https://shouchen123.github.io/tags/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2018-06-06T05:23:07.000Z","updated":"2018-06-07T02:24:46.798Z","comments":false,"path":"links/index.html","permalink":"https://shouchen123.github.io/links/index.html","excerpt":"","text":"由于是用JS生成的所以友情链接根本不会提升权重-_-||，只能说是伪链吧。但是一些链接还是要放的。 原主题博主博客地址：https://www.tangkunyin.com/一个有意思的博客地址：http://gitom.top/"},{"title":"时光轴","date":"2017-02-07T05:23:27.000Z","updated":"2018-06-04T14:24:28.000Z","comments":false,"path":"timeline/index.html","permalink":"https://shouchen123.github.io/timeline/index.html","excerpt":"","text":"时光轴嘛，得先有时光，会更新的，别急……"}],"posts":[{"title":"Linux 搭建Socket5服务器","slug":"linux-搭建socket5服务器","date":"2018-06-07T03:45:43.000Z","updated":"2018-06-07T03:46:02.644Z","comments":true,"path":"others/cji40be6g0007ykp5oqjk7y50.html","link":"","permalink":"https://shouchen123.github.io/others/cji40be6g0007ykp5oqjk7y50.html","excerpt":"","text":"","categories":[{"name":"其他","slug":"others","permalink":"https://shouchen123.github.io/categories/others/"}],"tags":[]},{"title":"Idea破解教程","slug":"Idea破解教程","date":"2018-06-07T03:44:21.000Z","updated":"2018-06-07T03:44:54.184Z","comments":true,"path":"resource/cji40be6e0005ykp5krvu0h7k.html","link":"","permalink":"https://shouchen123.github.io/resource/cji40be6e0005ykp5krvu0h7k.html","excerpt":"","text":"","categories":[{"name":"资源","slug":"resource","permalink":"https://shouchen123.github.io/categories/resource/"}],"tags":[]},{"title":"JS实现简单页面上传","slug":"JS实现简单页面上传","date":"2018-06-07T03:38:24.000Z","updated":"2018-06-07T03:40:26.969Z","comments":true,"path":"JavaScript/cji40be690002ykp5mb3dhiqr.html","link":"","permalink":"https://shouchen123.github.io/JavaScript/cji40be690002ykp5mb3dhiqr.html","excerpt":"","text":"","categories":[{"name":"JavaScript","slug":"JavaScript","permalink":"https://shouchen123.github.io/categories/JavaScript/"}],"tags":[]},{"title":"Docker 搭建Kafka","slug":"Docker-搭建kafka","date":"2018-06-07T03:07:08.000Z","updated":"2018-06-07T03:40:00.559Z","comments":true,"path":"Docker/cji40be650000ykp5r9kfirbx.html","link":"","permalink":"https://shouchen123.github.io/Docker/cji40be650000ykp5r9kfirbx.html","excerpt":"","text":"","categories":[{"name":"Docker","slug":"Docker","permalink":"https://shouchen123.github.io/categories/Docker/"}],"tags":[]},{"title":"Java实现简单Scoket通讯","slug":"Java实现简单Scoket通讯","date":"2018-06-06T07:59:44.000Z","updated":"2018-06-07T01:47:00.960Z","comments":true,"path":"JAVA/cji40be6f0006ykp5x8pj3i9r.html","link":"","permalink":"https://shouchen123.github.io/JAVA/cji40be6f0006ykp5x8pj3i9r.html","excerpt":"","text":"这几天在QQ群里面聊天装逼突然发现那群大佬一直在聊socket通讯，大佬们聊的很开心。然而我却是一脸懵逼。虽然我听不懂但还是觉得挺厉害的。于是我出于好奇便去百度了一下发现也代码挺简单的。然后我灵机一动。居然能实现简单的数据传输难道不能用来传文件？于是我在原有的基础上稍加改动便实现了这个简单东西。不多说上码这是服务端 public class Server { public static void main(String[] args) throws IOException { ServerSocket serverSocket = null; Socket socket = null; InputStream is = null; OutputStream fo = null; OutputStream os = null; PrintWriter pw = null; try { /** * 基于TCP协议的Socket通信，实现用户登录，服务端 */ // 1、创建一个服务器端Socket，即ServerSocket，指定绑定的端口，并监听此端口 serverSocket = new ServerSocket(5000);// 1024-65535的某个端口 // 2、调用accept()方法开始监听，等待客户端的连接 socket = serverSocket.accept(); // 3、获取输入流，并读取客户端信息 is = socket.getInputStream(); byte[] bytes = new byte [1024]; fo = new FileOutputStream(new File(&quot;要存储文件路径&quot;)); while(is.read(bytes, 0, bytes.length)!=-1) { fo.write(bytes); } fo.flush(); socket.shutdownInput();// 关闭输入流 // 4、获取输出流，响应客户端的请求 os = socket.getOutputStream(); pw = new PrintWriter(os); pw.write(&quot;接收成功&quot;); pw.flush(); } catch (Exception e) { e.printStackTrace(); }finally { // 5、关闭资源 fo.close(); pw.close(); os.close(); is.close(); socket.close(); serverSocket.close(); } } } public class Client { public static void main(String[] args) throws IOException { Socket socket = null; InputStream fi = null; OutputStream os = null; InputStream is = null; BufferedReader br = null; try { // 客户端 // 1、创建客户端Socket，指定服务器地址和端口 socket = new Socket(&quot;localhost&quot;, 5000); // 2、获取输出流，向服务器端发送信息 os = socket.getOutputStream();// 字节输出流 File file = new File(&quot;要传输的文件路径&quot;); fi = new FileInputStream(file); byte[] bytes = new byte[1024]; while (fi.read(bytes, 0, bytes.length) != -1) { os.write(bytes); } socket.shutdownOutput(); // 3、获取输入流，并读取服务器端的响应信息 is = socket.getInputStream(); br = new BufferedReader(new InputStreamReader(is)); String info = null; while ((info = br.readLine()) != null) { System.out.println(info); } } catch (Exception e) { e.printStackTrace(); }finally { // 4、关闭资源 fi.close(); br.close(); is.close(); os.close(); socket.close(); } } }","categories":[{"name":"JAVA","slug":"JAVA","permalink":"https://shouchen123.github.io/categories/JAVA/"}],"tags":[{"name":"-Socket","slug":"Socket","permalink":"https://shouchen123.github.io/tags/Socket/"}]}]}